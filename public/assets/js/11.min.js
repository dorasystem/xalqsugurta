(window.webpackJsonp = window.webpackJsonp || []).push([[11], {
    10: function(e, t, n) {
        "use strict";
        n.r(t),
        n.d(t, "Voice", (function() {
            return u
        }
        ));
        let o = null
          , i = new Event("selectionEnd");
        ["mouseup", "selectionchange"].map(e => {
            document.addEventListener(e.toString(), e => {
                o && "selectionchange" === e.type && clearTimeout(o),
                o = setTimeout((function() {
                    "mouseup" === e.type && "" !== window.getSelection().toString() && document.dispatchEvent(i)
                }
                ), 100)
            }
            )
        }
        );
        const a = e => e.replace(/%/g, "").replace(/\s+/g, "%20")
          , s = (e, t) => `https://tts.voicetech.yandex.net/tts?format=mp3&lang=${"uz_UZ" === e ? "tr_TR" : e}&speaker=${"ru_RU" === e ? "oksana" : "en_GB" === e ? "nick" : "erkanyavas"}&speed=${"ru_RU" === e ? "1.1" : "en_GB" === e ? "1" : "0.9"}&text=${t}`
          , r = (e, t) => {
            document.body.append(e),
            t && (e.volume = 1,
            e.setAttribute("src", t),
            e.src && (e.addEventListener("canplay", t => {
                e.play()
            }
            , !1),
            e.addEventListener("ended", e => {
                document.body.querySelector(".audio") && document.body.querySelector(".audio").remove()
            }
            , !1)))
        }
          , d = e => {
            e.src && !e.paused && (e.volume = .5,
            e.pause(),
            e.removeAttribute("src"))
        }
        ;
        class u {
            constructor() {
                this.audioElem = null
            }
            init() {
                this.audioElem = document.createElement("Audio"),
                this.audioElem.classList.add("audio"),
                document.addEventListener("selectionEnd", this._selectedHandler.bind(this)),
                document.querySelectorAll("a, button, h1, h2, h3, h4, h5, h6").forEach(e => {
                    e.addEventListener("mouseenter", this._mouseOverHandler.bind(this), !1)
                }
                )
            }
            destroy() {
                this.audioElem = null,
                document.removeEventListener("selectionEnd", this._selectedHandler),
                document.querySelectorAll("a, button, h1, h2, h3, h4, h5, h6").forEach(e => {
                    e.removeEventListener("mouseenter", this._mouseOverHandler, !1)
                }
                )
            }
            _selectedHandler() {
                if (this.audioElem) {
                    d(this.audioElem);
                    const e = a(window.getSelection().toString());
                    if ("" !== e) {
                        const t = document.querySelector("[data-voice]").dataset.voiceLang;
                        r(this.audioElem, s(t, e))
                    }
                }
            }
            _mouseOverHandler(e) {
                if (this.audioElem) {
                    d(this.audioElem);
                    const t = e.currentTarget || e.target
                      , n = t.attributes.title ? t.attributes.title.value : t.innerText ? t.innerText : t.attributes.ariaLabel ? t.attributes.ariaLabel.value : ""
                      , o = a(n);
                    if ("" !== o) {
                        const e = document.querySelector("[data-voice]").dataset.voiceLang;
                        r(this.audioElem, s(e, o))
                    }
                }
            }
        }
    }
}]);
